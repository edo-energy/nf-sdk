// source: normalgw/bacnet/scan.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var normalgw_bacnet_bacnet_pb = require('../../normalgw/bacnet/bacnet_pb.js');
goog.object.extend(proto, normalgw_bacnet_bacnet_pb);
var normalgw_bacnet_bacenum_pb = require('../../normalgw/bacnet/bacenum_pb.js');
goog.object.extend(proto, normalgw_bacnet_bacenum_pb);
goog.exportSymbol('proto.normalgw.bacnet.BACnetDeviceScan', null, global);
goog.exportSymbol('proto.normalgw.bacnet.BACnetObjectScan', null, global);
goog.exportSymbol('proto.normalgw.bacnet.BACnetPoint', null, global);
goog.exportSymbol('proto.normalgw.bacnet.DeviceScanDelta', null, global);
goog.exportSymbol('proto.normalgw.bacnet.DeviceScanJob', null, global);
goog.exportSymbol('proto.normalgw.bacnet.GetJobReply', null, global);
goog.exportSymbol('proto.normalgw.bacnet.GetJobRequest', null, global);
goog.exportSymbol('proto.normalgw.bacnet.GetScanDeltaReply', null, global);
goog.exportSymbol('proto.normalgw.bacnet.GetScanDeltaRequest', null, global);
goog.exportSymbol('proto.normalgw.bacnet.ImportJobReply', null, global);
goog.exportSymbol('proto.normalgw.bacnet.ImportJobRequest', null, global);
goog.exportSymbol('proto.normalgw.bacnet.NetworkScanJob', null, global);
goog.exportSymbol('proto.normalgw.bacnet.ObjectScanDelta', null, global);
goog.exportSymbol('proto.normalgw.bacnet.ObjectScanJob', null, global);
goog.exportSymbol('proto.normalgw.bacnet.ObserveJobUpdatesReply', null, global);
goog.exportSymbol('proto.normalgw.bacnet.ObserveJobUpdatesRequest', null, global);
goog.exportSymbol('proto.normalgw.bacnet.RestartJobsReply', null, global);
goog.exportSymbol('proto.normalgw.bacnet.RestartJobsRequest', null, global);
goog.exportSymbol('proto.normalgw.bacnet.ScanJob', null, global);
goog.exportSymbol('proto.normalgw.bacnet.ScanJob.JobStatus', null, global);
goog.exportSymbol('proto.normalgw.bacnet.ScanJob.JobspecCase', null, global);
goog.exportSymbol('proto.normalgw.bacnet.ScanJob.Timestamps', null, global);
goog.exportSymbol('proto.normalgw.bacnet.StartJobRequest', null, global);
goog.exportSymbol('proto.normalgw.bacnet.StartJobRequest.JobspecCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.BACnetDeviceScan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.BACnetDeviceScan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.BACnetDeviceScan.displayName = 'proto.normalgw.bacnet.BACnetDeviceScan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.BACnetObjectScan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.BACnetObjectScan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.BACnetObjectScan.displayName = 'proto.normalgw.bacnet.BACnetObjectScan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.ScanJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.normalgw.bacnet.ScanJob.repeatedFields_, proto.normalgw.bacnet.ScanJob.oneofGroups_);
};
goog.inherits(proto.normalgw.bacnet.ScanJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.ScanJob.displayName = 'proto.normalgw.bacnet.ScanJob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.ScanJob.Timestamps = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.ScanJob.Timestamps, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.ScanJob.Timestamps.displayName = 'proto.normalgw.bacnet.ScanJob.Timestamps';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.DeviceScanJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.normalgw.bacnet.DeviceScanJob.repeatedFields_, null);
};
goog.inherits(proto.normalgw.bacnet.DeviceScanJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.DeviceScanJob.displayName = 'proto.normalgw.bacnet.DeviceScanJob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.ObjectScanJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.normalgw.bacnet.ObjectScanJob.repeatedFields_, null);
};
goog.inherits(proto.normalgw.bacnet.ObjectScanJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.ObjectScanJob.displayName = 'proto.normalgw.bacnet.ObjectScanJob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.DeviceScanDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.normalgw.bacnet.DeviceScanDelta.repeatedFields_, null);
};
goog.inherits(proto.normalgw.bacnet.DeviceScanDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.DeviceScanDelta.displayName = 'proto.normalgw.bacnet.DeviceScanDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.ObjectScanDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.normalgw.bacnet.ObjectScanDelta.repeatedFields_, null);
};
goog.inherits(proto.normalgw.bacnet.ObjectScanDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.ObjectScanDelta.displayName = 'proto.normalgw.bacnet.ObjectScanDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.GetScanDeltaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.normalgw.bacnet.GetScanDeltaRequest.repeatedFields_, null);
};
goog.inherits(proto.normalgw.bacnet.GetScanDeltaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.GetScanDeltaRequest.displayName = 'proto.normalgw.bacnet.GetScanDeltaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.GetScanDeltaReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.GetScanDeltaReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.GetScanDeltaReply.displayName = 'proto.normalgw.bacnet.GetScanDeltaReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.NetworkScanJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.NetworkScanJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.NetworkScanJob.displayName = 'proto.normalgw.bacnet.NetworkScanJob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.BACnetPoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.BACnetPoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.BACnetPoint.displayName = 'proto.normalgw.bacnet.BACnetPoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.GetJobRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.GetJobRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.GetJobRequest.displayName = 'proto.normalgw.bacnet.GetJobRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.GetJobReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.normalgw.bacnet.GetJobReply.repeatedFields_, null);
};
goog.inherits(proto.normalgw.bacnet.GetJobReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.GetJobReply.displayName = 'proto.normalgw.bacnet.GetJobReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.StartJobRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.normalgw.bacnet.StartJobRequest.oneofGroups_);
};
goog.inherits(proto.normalgw.bacnet.StartJobRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.StartJobRequest.displayName = 'proto.normalgw.bacnet.StartJobRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.RestartJobsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.normalgw.bacnet.RestartJobsRequest.repeatedFields_, null);
};
goog.inherits(proto.normalgw.bacnet.RestartJobsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.RestartJobsRequest.displayName = 'proto.normalgw.bacnet.RestartJobsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.RestartJobsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.normalgw.bacnet.RestartJobsReply.repeatedFields_, null);
};
goog.inherits(proto.normalgw.bacnet.RestartJobsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.RestartJobsReply.displayName = 'proto.normalgw.bacnet.RestartJobsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.ImportJobRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.ImportJobRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.ImportJobRequest.displayName = 'proto.normalgw.bacnet.ImportJobRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.ImportJobReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.ImportJobReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.ImportJobReply.displayName = 'proto.normalgw.bacnet.ImportJobReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.ObserveJobUpdatesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.ObserveJobUpdatesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.ObserveJobUpdatesRequest.displayName = 'proto.normalgw.bacnet.ObserveJobUpdatesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.ObserveJobUpdatesReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.ObserveJobUpdatesReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.ObserveJobUpdatesReply.displayName = 'proto.normalgw.bacnet.ObserveJobUpdatesReply';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.BACnetDeviceScan.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.BACnetDeviceScan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.BACnetDeviceScan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.BACnetDeviceScan.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceAddress: (f = msg.getDeviceAddress()) && normalgw_bacnet_bacnet_pb.DeviceAddress.toObject(includeInstance, f),
    scannedAt: (f = msg.getScannedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    scannedPropsMap: (f = msg.getScannedPropsMap()) ? f.toObject(includeInstance, proto.normalgw.bacnet.ApplicationDataValue.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.BACnetDeviceScan}
 */
proto.normalgw.bacnet.BACnetDeviceScan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.BACnetDeviceScan;
  return proto.normalgw.bacnet.BACnetDeviceScan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.BACnetDeviceScan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.BACnetDeviceScan}
 */
proto.normalgw.bacnet.BACnetDeviceScan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = new normalgw_bacnet_bacnet_pb.DeviceAddress;
      reader.readMessage(value,normalgw_bacnet_bacnet_pb.DeviceAddress.deserializeBinaryFromReader);
      msg.setDeviceAddress(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setScannedAt(value);
      break;
    case 4:
      var value = msg.getScannedPropsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.normalgw.bacnet.ApplicationDataValue.deserializeBinaryFromReader, 0, new proto.normalgw.bacnet.ApplicationDataValue());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.BACnetDeviceScan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.BACnetDeviceScan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.BACnetDeviceScan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.BACnetDeviceScan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      normalgw_bacnet_bacnet_pb.DeviceAddress.serializeBinaryToWriter
    );
  }
  f = message.getScannedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getScannedPropsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.normalgw.bacnet.ApplicationDataValue.serializeBinaryToWriter);
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.normalgw.bacnet.BACnetDeviceScan.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.BACnetDeviceScan} returns this
 */
proto.normalgw.bacnet.BACnetDeviceScan.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DeviceAddress device_address = 2;
 * @return {?proto.normalgw.bacnet.DeviceAddress}
 */
proto.normalgw.bacnet.BACnetDeviceScan.prototype.getDeviceAddress = function() {
  return /** @type{?proto.normalgw.bacnet.DeviceAddress} */ (
    jspb.Message.getWrapperField(this, normalgw_bacnet_bacnet_pb.DeviceAddress, 2));
};


/**
 * @param {?proto.normalgw.bacnet.DeviceAddress|undefined} value
 * @return {!proto.normalgw.bacnet.BACnetDeviceScan} returns this
*/
proto.normalgw.bacnet.BACnetDeviceScan.prototype.setDeviceAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.BACnetDeviceScan} returns this
 */
proto.normalgw.bacnet.BACnetDeviceScan.prototype.clearDeviceAddress = function() {
  return this.setDeviceAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.BACnetDeviceScan.prototype.hasDeviceAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp scanned_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.normalgw.bacnet.BACnetDeviceScan.prototype.getScannedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.normalgw.bacnet.BACnetDeviceScan} returns this
*/
proto.normalgw.bacnet.BACnetDeviceScan.prototype.setScannedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.BACnetDeviceScan} returns this
 */
proto.normalgw.bacnet.BACnetDeviceScan.prototype.clearScannedAt = function() {
  return this.setScannedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.BACnetDeviceScan.prototype.hasScannedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<uint32, ApplicationDataValue> scanned_props = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.normalgw.bacnet.ApplicationDataValue>}
 */
proto.normalgw.bacnet.BACnetDeviceScan.prototype.getScannedPropsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.normalgw.bacnet.ApplicationDataValue>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.normalgw.bacnet.ApplicationDataValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.normalgw.bacnet.BACnetDeviceScan} returns this
 */
proto.normalgw.bacnet.BACnetDeviceScan.prototype.clearScannedPropsMap = function() {
  this.getScannedPropsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.BACnetObjectScan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.BACnetObjectScan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.BACnetObjectScan.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    objectId: (f = msg.getObjectId()) && normalgw_bacnet_bacnet_pb.ObjectId.toObject(includeInstance, f),
    scannedAt: (f = msg.getScannedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    scannedPropsMap: (f = msg.getScannedPropsMap()) ? f.toObject(includeInstance, proto.normalgw.bacnet.ApplicationDataValue.toObject) : [],
    errorPropsMap: (f = msg.getErrorPropsMap()) ? f.toObject(includeInstance, proto.normalgw.bacnet.Error.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.BACnetObjectScan}
 */
proto.normalgw.bacnet.BACnetObjectScan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.BACnetObjectScan;
  return proto.normalgw.bacnet.BACnetObjectScan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.BACnetObjectScan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.BACnetObjectScan}
 */
proto.normalgw.bacnet.BACnetObjectScan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = new normalgw_bacnet_bacnet_pb.ObjectId;
      reader.readMessage(value,normalgw_bacnet_bacnet_pb.ObjectId.deserializeBinaryFromReader);
      msg.setObjectId(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setScannedAt(value);
      break;
    case 4:
      var value = msg.getScannedPropsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.normalgw.bacnet.ApplicationDataValue.deserializeBinaryFromReader, 0, new proto.normalgw.bacnet.ApplicationDataValue());
         });
      break;
    case 5:
      var value = msg.getErrorPropsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.normalgw.bacnet.Error.deserializeBinaryFromReader, 0, new proto.normalgw.bacnet.Error());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.BACnetObjectScan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.BACnetObjectScan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.BACnetObjectScan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getObjectId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      normalgw_bacnet_bacnet_pb.ObjectId.serializeBinaryToWriter
    );
  }
  f = message.getScannedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getScannedPropsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.normalgw.bacnet.ApplicationDataValue.serializeBinaryToWriter);
  }
  f = message.getErrorPropsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.normalgw.bacnet.Error.serializeBinaryToWriter);
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.BACnetObjectScan} returns this
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ObjectId object_id = 2;
 * @return {?proto.normalgw.bacnet.ObjectId}
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.getObjectId = function() {
  return /** @type{?proto.normalgw.bacnet.ObjectId} */ (
    jspb.Message.getWrapperField(this, normalgw_bacnet_bacnet_pb.ObjectId, 2));
};


/**
 * @param {?proto.normalgw.bacnet.ObjectId|undefined} value
 * @return {!proto.normalgw.bacnet.BACnetObjectScan} returns this
*/
proto.normalgw.bacnet.BACnetObjectScan.prototype.setObjectId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.BACnetObjectScan} returns this
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.clearObjectId = function() {
  return this.setObjectId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.hasObjectId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp scanned_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.getScannedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.normalgw.bacnet.BACnetObjectScan} returns this
*/
proto.normalgw.bacnet.BACnetObjectScan.prototype.setScannedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.BACnetObjectScan} returns this
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.clearScannedAt = function() {
  return this.setScannedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.hasScannedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<uint32, ApplicationDataValue> scanned_props = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.normalgw.bacnet.ApplicationDataValue>}
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.getScannedPropsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.normalgw.bacnet.ApplicationDataValue>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.normalgw.bacnet.ApplicationDataValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.normalgw.bacnet.BACnetObjectScan} returns this
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.clearScannedPropsMap = function() {
  this.getScannedPropsMap().clear();
  return this;};


/**
 * map<uint32, Error> error_props = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.normalgw.bacnet.Error>}
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.getErrorPropsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.normalgw.bacnet.Error>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.normalgw.bacnet.Error));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.normalgw.bacnet.BACnetObjectScan} returns this
 */
proto.normalgw.bacnet.BACnetObjectScan.prototype.clearErrorPropsMap = function() {
  this.getErrorPropsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.normalgw.bacnet.ScanJob.repeatedFields_ = [10,11];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.normalgw.bacnet.ScanJob.oneofGroups_ = [[7,8,9]];

/**
 * @enum {number}
 */
proto.normalgw.bacnet.ScanJob.JobspecCase = {
  JOBSPEC_NOT_SET: 0,
  DEVICE: 7,
  OBJECT: 8,
  NETWORK: 9
};

/**
 * @return {proto.normalgw.bacnet.ScanJob.JobspecCase}
 */
proto.normalgw.bacnet.ScanJob.prototype.getJobspecCase = function() {
  return /** @type {proto.normalgw.bacnet.ScanJob.JobspecCase} */(jspb.Message.computeOneofCase(this, proto.normalgw.bacnet.ScanJob.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.ScanJob.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.ScanJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.ScanJob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ScanJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parentId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    clientId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    statusMessage: jspb.Message.getFieldWithDefault(msg, 5, ""),
    timestamps: (f = msg.getTimestamps()) && proto.normalgw.bacnet.ScanJob.Timestamps.toObject(includeInstance, f),
    device: (f = msg.getDevice()) && proto.normalgw.bacnet.DeviceScanJob.toObject(includeInstance, f),
    object: (f = msg.getObject()) && proto.normalgw.bacnet.ObjectScanJob.toObject(includeInstance, f),
    network: (f = msg.getNetwork()) && proto.normalgw.bacnet.NetworkScanJob.toObject(includeInstance, f),
    deviceResultList: jspb.Message.toObjectList(msg.getDeviceResultList(),
    proto.normalgw.bacnet.BACnetDeviceScan.toObject, includeInstance),
    objectResultList: jspb.Message.toObjectList(msg.getObjectResultList(),
    proto.normalgw.bacnet.BACnetObjectScan.toObject, includeInstance),
    objectCountMap: (f = msg.getObjectCountMap()) ? f.toObject(includeInstance, undefined) : [],
    autoImport: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    imported: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    autoPoll: (f = msg.getAutoPoll()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.ScanJob}
 */
proto.normalgw.bacnet.ScanJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.ScanJob;
  return proto.normalgw.bacnet.ScanJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.ScanJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.ScanJob}
 */
proto.normalgw.bacnet.ScanJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParentId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 4:
      var value = /** @type {!proto.normalgw.bacnet.ScanJob.JobStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusMessage(value);
      break;
    case 6:
      var value = new proto.normalgw.bacnet.ScanJob.Timestamps;
      reader.readMessage(value,proto.normalgw.bacnet.ScanJob.Timestamps.deserializeBinaryFromReader);
      msg.setTimestamps(value);
      break;
    case 7:
      var value = new proto.normalgw.bacnet.DeviceScanJob;
      reader.readMessage(value,proto.normalgw.bacnet.DeviceScanJob.deserializeBinaryFromReader);
      msg.setDevice(value);
      break;
    case 8:
      var value = new proto.normalgw.bacnet.ObjectScanJob;
      reader.readMessage(value,proto.normalgw.bacnet.ObjectScanJob.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    case 9:
      var value = new proto.normalgw.bacnet.NetworkScanJob;
      reader.readMessage(value,proto.normalgw.bacnet.NetworkScanJob.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 10:
      var value = new proto.normalgw.bacnet.BACnetDeviceScan;
      reader.readMessage(value,proto.normalgw.bacnet.BACnetDeviceScan.deserializeBinaryFromReader);
      msg.addDeviceResult(value);
      break;
    case 11:
      var value = new proto.normalgw.bacnet.BACnetObjectScan;
      reader.readMessage(value,proto.normalgw.bacnet.BACnetObjectScan.deserializeBinaryFromReader);
      msg.addObjectResult(value);
      break;
    case 12:
      var value = msg.getObjectCountMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readUint32, null, 0, 0);
         });
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoImport(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setImported(value);
      break;
    case 16:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setAutoPoll(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.ScanJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.ScanJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.ScanJob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ScanJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getParentId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getStatusMessage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTimestamps();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.normalgw.bacnet.ScanJob.Timestamps.serializeBinaryToWriter
    );
  }
  f = message.getDevice();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.normalgw.bacnet.DeviceScanJob.serializeBinaryToWriter
    );
  }
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.normalgw.bacnet.ObjectScanJob.serializeBinaryToWriter
    );
  }
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.normalgw.bacnet.NetworkScanJob.serializeBinaryToWriter
    );
  }
  f = message.getDeviceResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.normalgw.bacnet.BACnetDeviceScan.serializeBinaryToWriter
    );
  }
  f = message.getObjectResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.normalgw.bacnet.BACnetObjectScan.serializeBinaryToWriter
    );
  }
  f = message.getObjectCountMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(12, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeUint32);
  }
  f = message.getAutoImport();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getImported();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getAutoPoll();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.normalgw.bacnet.ScanJob.JobStatus = {
  PENDING: 0,
  RUNNING: 1,
  DONE: 2,
  ERROR: 3,
  ANY: 4
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.ScanJob.Timestamps.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.ScanJob.Timestamps} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ScanJob.Timestamps.toObject = function(includeInstance, msg) {
  var f, obj = {
    queuedAt: (f = msg.getQueuedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    runAt: (f = msg.getRunAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    finishedAt: (f = msg.getFinishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.ScanJob.Timestamps}
 */
proto.normalgw.bacnet.ScanJob.Timestamps.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.ScanJob.Timestamps;
  return proto.normalgw.bacnet.ScanJob.Timestamps.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.ScanJob.Timestamps} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.ScanJob.Timestamps}
 */
proto.normalgw.bacnet.ScanJob.Timestamps.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setQueuedAt(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRunAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFinishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.ScanJob.Timestamps.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.ScanJob.Timestamps} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ScanJob.Timestamps.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueuedAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRunAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFinishedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp queued_at = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.getQueuedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.normalgw.bacnet.ScanJob.Timestamps} returns this
*/
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.setQueuedAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ScanJob.Timestamps} returns this
 */
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.clearQueuedAt = function() {
  return this.setQueuedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.hasQueuedAt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp run_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.getRunAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.normalgw.bacnet.ScanJob.Timestamps} returns this
*/
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.setRunAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ScanJob.Timestamps} returns this
 */
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.clearRunAt = function() {
  return this.setRunAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.hasRunAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp finished_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.getFinishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.normalgw.bacnet.ScanJob.Timestamps} returns this
*/
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.setFinishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ScanJob.Timestamps} returns this
 */
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.clearFinishedAt = function() {
  return this.setFinishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ScanJob.Timestamps.prototype.hasFinishedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.normalgw.bacnet.ScanJob.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 parent_id = 2;
 * @return {number}
 */
proto.normalgw.bacnet.ScanJob.prototype.getParentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.setParentId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string client_id = 3;
 * @return {string}
 */
proto.normalgw.bacnet.ScanJob.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional JobStatus status = 4;
 * @return {!proto.normalgw.bacnet.ScanJob.JobStatus}
 */
proto.normalgw.bacnet.ScanJob.prototype.getStatus = function() {
  return /** @type {!proto.normalgw.bacnet.ScanJob.JobStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.normalgw.bacnet.ScanJob.JobStatus} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string status_message = 5;
 * @return {string}
 */
proto.normalgw.bacnet.ScanJob.prototype.getStatusMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.setStatusMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Timestamps timestamps = 6;
 * @return {?proto.normalgw.bacnet.ScanJob.Timestamps}
 */
proto.normalgw.bacnet.ScanJob.prototype.getTimestamps = function() {
  return /** @type{?proto.normalgw.bacnet.ScanJob.Timestamps} */ (
    jspb.Message.getWrapperField(this, proto.normalgw.bacnet.ScanJob.Timestamps, 6));
};


/**
 * @param {?proto.normalgw.bacnet.ScanJob.Timestamps|undefined} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
*/
proto.normalgw.bacnet.ScanJob.prototype.setTimestamps = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.clearTimestamps = function() {
  return this.setTimestamps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ScanJob.prototype.hasTimestamps = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DeviceScanJob device = 7;
 * @return {?proto.normalgw.bacnet.DeviceScanJob}
 */
proto.normalgw.bacnet.ScanJob.prototype.getDevice = function() {
  return /** @type{?proto.normalgw.bacnet.DeviceScanJob} */ (
    jspb.Message.getWrapperField(this, proto.normalgw.bacnet.DeviceScanJob, 7));
};


/**
 * @param {?proto.normalgw.bacnet.DeviceScanJob|undefined} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
*/
proto.normalgw.bacnet.ScanJob.prototype.setDevice = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.normalgw.bacnet.ScanJob.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.clearDevice = function() {
  return this.setDevice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ScanJob.prototype.hasDevice = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ObjectScanJob object = 8;
 * @return {?proto.normalgw.bacnet.ObjectScanJob}
 */
proto.normalgw.bacnet.ScanJob.prototype.getObject = function() {
  return /** @type{?proto.normalgw.bacnet.ObjectScanJob} */ (
    jspb.Message.getWrapperField(this, proto.normalgw.bacnet.ObjectScanJob, 8));
};


/**
 * @param {?proto.normalgw.bacnet.ObjectScanJob|undefined} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
*/
proto.normalgw.bacnet.ScanJob.prototype.setObject = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.normalgw.bacnet.ScanJob.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ScanJob.prototype.hasObject = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional NetworkScanJob network = 9;
 * @return {?proto.normalgw.bacnet.NetworkScanJob}
 */
proto.normalgw.bacnet.ScanJob.prototype.getNetwork = function() {
  return /** @type{?proto.normalgw.bacnet.NetworkScanJob} */ (
    jspb.Message.getWrapperField(this, proto.normalgw.bacnet.NetworkScanJob, 9));
};


/**
 * @param {?proto.normalgw.bacnet.NetworkScanJob|undefined} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
*/
proto.normalgw.bacnet.ScanJob.prototype.setNetwork = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.normalgw.bacnet.ScanJob.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ScanJob.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated BACnetDeviceScan device_result = 10;
 * @return {!Array<!proto.normalgw.bacnet.BACnetDeviceScan>}
 */
proto.normalgw.bacnet.ScanJob.prototype.getDeviceResultList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.BACnetDeviceScan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.normalgw.bacnet.BACnetDeviceScan, 10));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.BACnetDeviceScan>} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
*/
proto.normalgw.bacnet.ScanJob.prototype.setDeviceResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.normalgw.bacnet.BACnetDeviceScan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.BACnetDeviceScan}
 */
proto.normalgw.bacnet.ScanJob.prototype.addDeviceResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.normalgw.bacnet.BACnetDeviceScan, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.clearDeviceResultList = function() {
  return this.setDeviceResultList([]);
};


/**
 * repeated BACnetObjectScan object_result = 11;
 * @return {!Array<!proto.normalgw.bacnet.BACnetObjectScan>}
 */
proto.normalgw.bacnet.ScanJob.prototype.getObjectResultList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.BACnetObjectScan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.normalgw.bacnet.BACnetObjectScan, 11));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.BACnetObjectScan>} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
*/
proto.normalgw.bacnet.ScanJob.prototype.setObjectResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.normalgw.bacnet.BACnetObjectScan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.BACnetObjectScan}
 */
proto.normalgw.bacnet.ScanJob.prototype.addObjectResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.normalgw.bacnet.BACnetObjectScan, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.clearObjectResultList = function() {
  return this.setObjectResultList([]);
};


/**
 * map<uint32, uint32> object_count = 12;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.normalgw.bacnet.ScanJob.prototype.getObjectCountMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 12, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.clearObjectCountMap = function() {
  this.getObjectCountMap().clear();
  return this;};


/**
 * optional bool auto_import = 13;
 * @return {boolean}
 */
proto.normalgw.bacnet.ScanJob.prototype.getAutoImport = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.setAutoImport = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool imported = 14;
 * @return {boolean}
 */
proto.normalgw.bacnet.ScanJob.prototype.getImported = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.setImported = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional google.protobuf.Duration auto_poll = 16;
 * @return {?proto.google.protobuf.Duration}
 */
proto.normalgw.bacnet.ScanJob.prototype.getAutoPoll = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 16));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
*/
proto.normalgw.bacnet.ScanJob.prototype.setAutoPoll = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ScanJob} returns this
 */
proto.normalgw.bacnet.ScanJob.prototype.clearAutoPoll = function() {
  return this.setAutoPoll(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ScanJob.prototype.hasAutoPoll = function() {
  return jspb.Message.getField(this, 16) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.normalgw.bacnet.DeviceScanJob.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.DeviceScanJob.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.DeviceScanJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.DeviceScanJob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.DeviceScanJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetsList: jspb.Message.toObjectList(msg.getTargetsList(),
    normalgw_bacnet_bacnet_pb.WhoIsRequest.toObject, includeInstance),
    propertiesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    autoScan: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.DeviceScanJob}
 */
proto.normalgw.bacnet.DeviceScanJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.DeviceScanJob;
  return proto.normalgw.bacnet.DeviceScanJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.DeviceScanJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.DeviceScanJob}
 */
proto.normalgw.bacnet.DeviceScanJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new normalgw_bacnet_bacnet_pb.WhoIsRequest;
      reader.readMessage(value,normalgw_bacnet_bacnet_pb.WhoIsRequest.deserializeBinaryFromReader);
      msg.addTargets(value);
      break;
    case 2:
      var value = /** @type {!Array<!proto.normalgw.bacnet.PropertyId>} */ (reader.readPackedEnum());
      msg.setPropertiesList(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoScan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.DeviceScanJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.DeviceScanJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.DeviceScanJob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.DeviceScanJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      normalgw_bacnet_bacnet_pb.WhoIsRequest.serializeBinaryToWriter
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getAutoScan();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * repeated WhoIsRequest targets = 1;
 * @return {!Array<!proto.normalgw.bacnet.WhoIsRequest>}
 */
proto.normalgw.bacnet.DeviceScanJob.prototype.getTargetsList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.WhoIsRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, normalgw_bacnet_bacnet_pb.WhoIsRequest, 1));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.WhoIsRequest>} value
 * @return {!proto.normalgw.bacnet.DeviceScanJob} returns this
*/
proto.normalgw.bacnet.DeviceScanJob.prototype.setTargetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.normalgw.bacnet.WhoIsRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.WhoIsRequest}
 */
proto.normalgw.bacnet.DeviceScanJob.prototype.addTargets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.normalgw.bacnet.WhoIsRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.DeviceScanJob} returns this
 */
proto.normalgw.bacnet.DeviceScanJob.prototype.clearTargetsList = function() {
  return this.setTargetsList([]);
};


/**
 * repeated PropertyId properties = 2;
 * @return {!Array<!proto.normalgw.bacnet.PropertyId>}
 */
proto.normalgw.bacnet.DeviceScanJob.prototype.getPropertiesList = function() {
  return /** @type {!Array<!proto.normalgw.bacnet.PropertyId>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.PropertyId>} value
 * @return {!proto.normalgw.bacnet.DeviceScanJob} returns this
 */
proto.normalgw.bacnet.DeviceScanJob.prototype.setPropertiesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.normalgw.bacnet.PropertyId} value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.DeviceScanJob} returns this
 */
proto.normalgw.bacnet.DeviceScanJob.prototype.addProperties = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.DeviceScanJob} returns this
 */
proto.normalgw.bacnet.DeviceScanJob.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};


/**
 * optional bool auto_scan = 3;
 * @return {boolean}
 */
proto.normalgw.bacnet.DeviceScanJob.prototype.getAutoScan = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.normalgw.bacnet.DeviceScanJob} returns this
 */
proto.normalgw.bacnet.DeviceScanJob.prototype.setAutoScan = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.normalgw.bacnet.ObjectScanJob.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.ObjectScanJob.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.ObjectScanJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.ObjectScanJob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ObjectScanJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    target: (f = msg.getTarget()) && normalgw_bacnet_bacnet_pb.DeviceAddress.toObject(includeInstance, f),
    propertiesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.ObjectScanJob}
 */
proto.normalgw.bacnet.ObjectScanJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.ObjectScanJob;
  return proto.normalgw.bacnet.ObjectScanJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.ObjectScanJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.ObjectScanJob}
 */
proto.normalgw.bacnet.ObjectScanJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new normalgw_bacnet_bacnet_pb.DeviceAddress;
      reader.readMessage(value,normalgw_bacnet_bacnet_pb.DeviceAddress.deserializeBinaryFromReader);
      msg.setTarget(value);
      break;
    case 2:
      var value = /** @type {!Array<!proto.normalgw.bacnet.PropertyId>} */ (reader.readPackedEnum());
      msg.setPropertiesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.ObjectScanJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.ObjectScanJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.ObjectScanJob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ObjectScanJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTarget();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      normalgw_bacnet_bacnet_pb.DeviceAddress.serializeBinaryToWriter
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * optional DeviceAddress target = 1;
 * @return {?proto.normalgw.bacnet.DeviceAddress}
 */
proto.normalgw.bacnet.ObjectScanJob.prototype.getTarget = function() {
  return /** @type{?proto.normalgw.bacnet.DeviceAddress} */ (
    jspb.Message.getWrapperField(this, normalgw_bacnet_bacnet_pb.DeviceAddress, 1));
};


/**
 * @param {?proto.normalgw.bacnet.DeviceAddress|undefined} value
 * @return {!proto.normalgw.bacnet.ObjectScanJob} returns this
*/
proto.normalgw.bacnet.ObjectScanJob.prototype.setTarget = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ObjectScanJob} returns this
 */
proto.normalgw.bacnet.ObjectScanJob.prototype.clearTarget = function() {
  return this.setTarget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ObjectScanJob.prototype.hasTarget = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PropertyId properties = 2;
 * @return {!Array<!proto.normalgw.bacnet.PropertyId>}
 */
proto.normalgw.bacnet.ObjectScanJob.prototype.getPropertiesList = function() {
  return /** @type {!Array<!proto.normalgw.bacnet.PropertyId>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.PropertyId>} value
 * @return {!proto.normalgw.bacnet.ObjectScanJob} returns this
 */
proto.normalgw.bacnet.ObjectScanJob.prototype.setPropertiesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.normalgw.bacnet.PropertyId} value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.ObjectScanJob} returns this
 */
proto.normalgw.bacnet.ObjectScanJob.prototype.addProperties = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.ObjectScanJob} returns this
 */
proto.normalgw.bacnet.ObjectScanJob.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.normalgw.bacnet.DeviceScanDelta.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.DeviceScanDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.DeviceScanDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.DeviceScanDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scanTime: (f = msg.getScanTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdDevicesList: jspb.Message.toObjectList(msg.getCreatedDevicesList(),
    proto.normalgw.bacnet.BACnetDeviceScan.toObject, includeInstance),
    missingDevicesList: jspb.Message.toObjectList(msg.getMissingDevicesList(),
    proto.normalgw.bacnet.BACnetDeviceScan.toObject, includeInstance),
    modifiedDevicesList: jspb.Message.toObjectList(msg.getModifiedDevicesList(),
    proto.normalgw.bacnet.BACnetDeviceScan.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.DeviceScanDelta}
 */
proto.normalgw.bacnet.DeviceScanDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.DeviceScanDelta;
  return proto.normalgw.bacnet.DeviceScanDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.DeviceScanDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.DeviceScanDelta}
 */
proto.normalgw.bacnet.DeviceScanDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setScanTime(value);
      break;
    case 3:
      var value = new proto.normalgw.bacnet.BACnetDeviceScan;
      reader.readMessage(value,proto.normalgw.bacnet.BACnetDeviceScan.deserializeBinaryFromReader);
      msg.addCreatedDevices(value);
      break;
    case 4:
      var value = new proto.normalgw.bacnet.BACnetDeviceScan;
      reader.readMessage(value,proto.normalgw.bacnet.BACnetDeviceScan.deserializeBinaryFromReader);
      msg.addMissingDevices(value);
      break;
    case 5:
      var value = new proto.normalgw.bacnet.BACnetDeviceScan;
      reader.readMessage(value,proto.normalgw.bacnet.BACnetDeviceScan.deserializeBinaryFromReader);
      msg.addModifiedDevices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.DeviceScanDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.DeviceScanDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.DeviceScanDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScanTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.normalgw.bacnet.BACnetDeviceScan.serializeBinaryToWriter
    );
  }
  f = message.getMissingDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.normalgw.bacnet.BACnetDeviceScan.serializeBinaryToWriter
    );
  }
  f = message.getModifiedDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.normalgw.bacnet.BACnetDeviceScan.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.DeviceScanDelta} returns this
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp scan_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.getScanTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.normalgw.bacnet.DeviceScanDelta} returns this
*/
proto.normalgw.bacnet.DeviceScanDelta.prototype.setScanTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.DeviceScanDelta} returns this
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.clearScanTime = function() {
  return this.setScanTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.hasScanTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated BACnetDeviceScan created_devices = 3;
 * @return {!Array<!proto.normalgw.bacnet.BACnetDeviceScan>}
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.getCreatedDevicesList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.BACnetDeviceScan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.normalgw.bacnet.BACnetDeviceScan, 3));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.BACnetDeviceScan>} value
 * @return {!proto.normalgw.bacnet.DeviceScanDelta} returns this
*/
proto.normalgw.bacnet.DeviceScanDelta.prototype.setCreatedDevicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.normalgw.bacnet.BACnetDeviceScan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.BACnetDeviceScan}
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.addCreatedDevices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.normalgw.bacnet.BACnetDeviceScan, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.DeviceScanDelta} returns this
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.clearCreatedDevicesList = function() {
  return this.setCreatedDevicesList([]);
};


/**
 * repeated BACnetDeviceScan missing_devices = 4;
 * @return {!Array<!proto.normalgw.bacnet.BACnetDeviceScan>}
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.getMissingDevicesList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.BACnetDeviceScan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.normalgw.bacnet.BACnetDeviceScan, 4));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.BACnetDeviceScan>} value
 * @return {!proto.normalgw.bacnet.DeviceScanDelta} returns this
*/
proto.normalgw.bacnet.DeviceScanDelta.prototype.setMissingDevicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.normalgw.bacnet.BACnetDeviceScan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.BACnetDeviceScan}
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.addMissingDevices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.normalgw.bacnet.BACnetDeviceScan, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.DeviceScanDelta} returns this
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.clearMissingDevicesList = function() {
  return this.setMissingDevicesList([]);
};


/**
 * repeated BACnetDeviceScan modified_devices = 5;
 * @return {!Array<!proto.normalgw.bacnet.BACnetDeviceScan>}
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.getModifiedDevicesList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.BACnetDeviceScan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.normalgw.bacnet.BACnetDeviceScan, 5));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.BACnetDeviceScan>} value
 * @return {!proto.normalgw.bacnet.DeviceScanDelta} returns this
*/
proto.normalgw.bacnet.DeviceScanDelta.prototype.setModifiedDevicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.normalgw.bacnet.BACnetDeviceScan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.BACnetDeviceScan}
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.addModifiedDevices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.normalgw.bacnet.BACnetDeviceScan, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.DeviceScanDelta} returns this
 */
proto.normalgw.bacnet.DeviceScanDelta.prototype.clearModifiedDevicesList = function() {
  return this.setModifiedDevicesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.normalgw.bacnet.ObjectScanDelta.repeatedFields_ = [4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.ObjectScanDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.ObjectScanDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ObjectScanDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    target: (f = msg.getTarget()) && normalgw_bacnet_bacnet_pb.DeviceAddress.toObject(includeInstance, f),
    scanTime: (f = msg.getScanTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdObjectsList: jspb.Message.toObjectList(msg.getCreatedObjectsList(),
    proto.normalgw.bacnet.BACnetObjectScan.toObject, includeInstance),
    deletedObjectsList: jspb.Message.toObjectList(msg.getDeletedObjectsList(),
    proto.normalgw.bacnet.BACnetObjectScan.toObject, includeInstance),
    modifiedObjectsList: jspb.Message.toObjectList(msg.getModifiedObjectsList(),
    proto.normalgw.bacnet.BACnetObjectScan.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.ObjectScanDelta}
 */
proto.normalgw.bacnet.ObjectScanDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.ObjectScanDelta;
  return proto.normalgw.bacnet.ObjectScanDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.ObjectScanDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.ObjectScanDelta}
 */
proto.normalgw.bacnet.ObjectScanDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = new normalgw_bacnet_bacnet_pb.DeviceAddress;
      reader.readMessage(value,normalgw_bacnet_bacnet_pb.DeviceAddress.deserializeBinaryFromReader);
      msg.setTarget(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setScanTime(value);
      break;
    case 4:
      var value = new proto.normalgw.bacnet.BACnetObjectScan;
      reader.readMessage(value,proto.normalgw.bacnet.BACnetObjectScan.deserializeBinaryFromReader);
      msg.addCreatedObjects(value);
      break;
    case 5:
      var value = new proto.normalgw.bacnet.BACnetObjectScan;
      reader.readMessage(value,proto.normalgw.bacnet.BACnetObjectScan.deserializeBinaryFromReader);
      msg.addDeletedObjects(value);
      break;
    case 6:
      var value = new proto.normalgw.bacnet.BACnetObjectScan;
      reader.readMessage(value,proto.normalgw.bacnet.BACnetObjectScan.deserializeBinaryFromReader);
      msg.addModifiedObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.ObjectScanDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.ObjectScanDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ObjectScanDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTarget();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      normalgw_bacnet_bacnet_pb.DeviceAddress.serializeBinaryToWriter
    );
  }
  f = message.getScanTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.normalgw.bacnet.BACnetObjectScan.serializeBinaryToWriter
    );
  }
  f = message.getDeletedObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.normalgw.bacnet.BACnetObjectScan.serializeBinaryToWriter
    );
  }
  f = message.getModifiedObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.normalgw.bacnet.BACnetObjectScan.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.ObjectScanDelta} returns this
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DeviceAddress target = 2;
 * @return {?proto.normalgw.bacnet.DeviceAddress}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.getTarget = function() {
  return /** @type{?proto.normalgw.bacnet.DeviceAddress} */ (
    jspb.Message.getWrapperField(this, normalgw_bacnet_bacnet_pb.DeviceAddress, 2));
};


/**
 * @param {?proto.normalgw.bacnet.DeviceAddress|undefined} value
 * @return {!proto.normalgw.bacnet.ObjectScanDelta} returns this
*/
proto.normalgw.bacnet.ObjectScanDelta.prototype.setTarget = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ObjectScanDelta} returns this
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.clearTarget = function() {
  return this.setTarget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.hasTarget = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp scan_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.getScanTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.normalgw.bacnet.ObjectScanDelta} returns this
*/
proto.normalgw.bacnet.ObjectScanDelta.prototype.setScanTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ObjectScanDelta} returns this
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.clearScanTime = function() {
  return this.setScanTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.hasScanTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated BACnetObjectScan created_objects = 4;
 * @return {!Array<!proto.normalgw.bacnet.BACnetObjectScan>}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.getCreatedObjectsList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.BACnetObjectScan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.normalgw.bacnet.BACnetObjectScan, 4));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.BACnetObjectScan>} value
 * @return {!proto.normalgw.bacnet.ObjectScanDelta} returns this
*/
proto.normalgw.bacnet.ObjectScanDelta.prototype.setCreatedObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.normalgw.bacnet.BACnetObjectScan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.BACnetObjectScan}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.addCreatedObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.normalgw.bacnet.BACnetObjectScan, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.ObjectScanDelta} returns this
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.clearCreatedObjectsList = function() {
  return this.setCreatedObjectsList([]);
};


/**
 * repeated BACnetObjectScan deleted_objects = 5;
 * @return {!Array<!proto.normalgw.bacnet.BACnetObjectScan>}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.getDeletedObjectsList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.BACnetObjectScan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.normalgw.bacnet.BACnetObjectScan, 5));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.BACnetObjectScan>} value
 * @return {!proto.normalgw.bacnet.ObjectScanDelta} returns this
*/
proto.normalgw.bacnet.ObjectScanDelta.prototype.setDeletedObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.normalgw.bacnet.BACnetObjectScan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.BACnetObjectScan}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.addDeletedObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.normalgw.bacnet.BACnetObjectScan, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.ObjectScanDelta} returns this
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.clearDeletedObjectsList = function() {
  return this.setDeletedObjectsList([]);
};


/**
 * repeated BACnetObjectScan modified_objects = 6;
 * @return {!Array<!proto.normalgw.bacnet.BACnetObjectScan>}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.getModifiedObjectsList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.BACnetObjectScan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.normalgw.bacnet.BACnetObjectScan, 6));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.BACnetObjectScan>} value
 * @return {!proto.normalgw.bacnet.ObjectScanDelta} returns this
*/
proto.normalgw.bacnet.ObjectScanDelta.prototype.setModifiedObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.normalgw.bacnet.BACnetObjectScan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.BACnetObjectScan}
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.addModifiedObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.normalgw.bacnet.BACnetObjectScan, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.ObjectScanDelta} returns this
 */
proto.normalgw.bacnet.ObjectScanDelta.prototype.clearModifiedObjectsList = function() {
  return this.setModifiedObjectsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.normalgw.bacnet.GetScanDeltaRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.GetScanDeltaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.GetScanDeltaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.GetScanDeltaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.GetScanDeltaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sinceTime: (f = msg.getSinceTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deviceIdList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.GetScanDeltaRequest}
 */
proto.normalgw.bacnet.GetScanDeltaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.GetScanDeltaRequest;
  return proto.normalgw.bacnet.GetScanDeltaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.GetScanDeltaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.GetScanDeltaRequest}
 */
proto.normalgw.bacnet.GetScanDeltaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSinceTime(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setDeviceIdList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.GetScanDeltaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.GetScanDeltaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.GetScanDeltaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.GetScanDeltaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSinceTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeviceIdList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.normalgw.bacnet.GetScanDeltaRequest.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.GetScanDeltaRequest} returns this
 */
proto.normalgw.bacnet.GetScanDeltaRequest.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp since_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.normalgw.bacnet.GetScanDeltaRequest.prototype.getSinceTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.normalgw.bacnet.GetScanDeltaRequest} returns this
*/
proto.normalgw.bacnet.GetScanDeltaRequest.prototype.setSinceTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.GetScanDeltaRequest} returns this
 */
proto.normalgw.bacnet.GetScanDeltaRequest.prototype.clearSinceTime = function() {
  return this.setSinceTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.GetScanDeltaRequest.prototype.hasSinceTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated uint32 device_id = 3;
 * @return {!Array<number>}
 */
proto.normalgw.bacnet.GetScanDeltaRequest.prototype.getDeviceIdList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.normalgw.bacnet.GetScanDeltaRequest} returns this
 */
proto.normalgw.bacnet.GetScanDeltaRequest.prototype.setDeviceIdList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.GetScanDeltaRequest} returns this
 */
proto.normalgw.bacnet.GetScanDeltaRequest.prototype.addDeviceId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.GetScanDeltaRequest} returns this
 */
proto.normalgw.bacnet.GetScanDeltaRequest.prototype.clearDeviceIdList = function() {
  return this.setDeviceIdList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.GetScanDeltaReply.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.GetScanDeltaReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.GetScanDeltaReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.GetScanDeltaReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    jobId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    deviceDelta: (f = msg.getDeviceDelta()) && proto.normalgw.bacnet.DeviceScanDelta.toObject(includeInstance, f),
    objectDelta: (f = msg.getObjectDelta()) && proto.normalgw.bacnet.ObjectScanDelta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.GetScanDeltaReply}
 */
proto.normalgw.bacnet.GetScanDeltaReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.GetScanDeltaReply;
  return proto.normalgw.bacnet.GetScanDeltaReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.GetScanDeltaReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.GetScanDeltaReply}
 */
proto.normalgw.bacnet.GetScanDeltaReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setJobId(value);
      break;
    case 3:
      var value = new proto.normalgw.bacnet.DeviceScanDelta;
      reader.readMessage(value,proto.normalgw.bacnet.DeviceScanDelta.deserializeBinaryFromReader);
      msg.setDeviceDelta(value);
      break;
    case 4:
      var value = new proto.normalgw.bacnet.ObjectScanDelta;
      reader.readMessage(value,proto.normalgw.bacnet.ObjectScanDelta.deserializeBinaryFromReader);
      msg.setObjectDelta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.GetScanDeltaReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.GetScanDeltaReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.GetScanDeltaReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.GetScanDeltaReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJobId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDeviceDelta();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.normalgw.bacnet.DeviceScanDelta.serializeBinaryToWriter
    );
  }
  f = message.getObjectDelta();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.normalgw.bacnet.ObjectScanDelta.serializeBinaryToWriter
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.normalgw.bacnet.GetScanDeltaReply.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.GetScanDeltaReply} returns this
 */
proto.normalgw.bacnet.GetScanDeltaReply.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 job_id = 2;
 * @return {number}
 */
proto.normalgw.bacnet.GetScanDeltaReply.prototype.getJobId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.GetScanDeltaReply} returns this
 */
proto.normalgw.bacnet.GetScanDeltaReply.prototype.setJobId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional DeviceScanDelta device_delta = 3;
 * @return {?proto.normalgw.bacnet.DeviceScanDelta}
 */
proto.normalgw.bacnet.GetScanDeltaReply.prototype.getDeviceDelta = function() {
  return /** @type{?proto.normalgw.bacnet.DeviceScanDelta} */ (
    jspb.Message.getWrapperField(this, proto.normalgw.bacnet.DeviceScanDelta, 3));
};


/**
 * @param {?proto.normalgw.bacnet.DeviceScanDelta|undefined} value
 * @return {!proto.normalgw.bacnet.GetScanDeltaReply} returns this
*/
proto.normalgw.bacnet.GetScanDeltaReply.prototype.setDeviceDelta = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.GetScanDeltaReply} returns this
 */
proto.normalgw.bacnet.GetScanDeltaReply.prototype.clearDeviceDelta = function() {
  return this.setDeviceDelta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.GetScanDeltaReply.prototype.hasDeviceDelta = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ObjectScanDelta object_delta = 4;
 * @return {?proto.normalgw.bacnet.ObjectScanDelta}
 */
proto.normalgw.bacnet.GetScanDeltaReply.prototype.getObjectDelta = function() {
  return /** @type{?proto.normalgw.bacnet.ObjectScanDelta} */ (
    jspb.Message.getWrapperField(this, proto.normalgw.bacnet.ObjectScanDelta, 4));
};


/**
 * @param {?proto.normalgw.bacnet.ObjectScanDelta|undefined} value
 * @return {!proto.normalgw.bacnet.GetScanDeltaReply} returns this
*/
proto.normalgw.bacnet.GetScanDeltaReply.prototype.setObjectDelta = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.GetScanDeltaReply} returns this
 */
proto.normalgw.bacnet.GetScanDeltaReply.prototype.clearObjectDelta = function() {
  return this.setObjectDelta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.GetScanDeltaReply.prototype.hasObjectDelta = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.NetworkScanJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.NetworkScanJob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.NetworkScanJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    subnet: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ports: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dnets: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dadrs: jspb.Message.getFieldWithDefault(msg, 4, ""),
    scanLimit: jspb.Message.getFieldWithDefault(msg, 5, 0),
    operationTimeout: (f = msg.getOperationTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    autoScan: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.NetworkScanJob}
 */
proto.normalgw.bacnet.NetworkScanJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.NetworkScanJob;
  return proto.normalgw.bacnet.NetworkScanJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.NetworkScanJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.NetworkScanJob}
 */
proto.normalgw.bacnet.NetworkScanJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubnet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPorts(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDnets(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDadrs(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScanLimit(value);
      break;
    case 6:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setOperationTimeout(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoScan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.NetworkScanJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.NetworkScanJob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.NetworkScanJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubnet();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPorts();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDnets();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDadrs();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getScanLimit();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getOperationTimeout();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getAutoScan();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string subnet = 1;
 * @return {string}
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.getSubnet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.NetworkScanJob} returns this
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.setSubnet = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ports = 2;
 * @return {string}
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.getPorts = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.NetworkScanJob} returns this
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.setPorts = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string dnets = 3;
 * @return {string}
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.getDnets = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.NetworkScanJob} returns this
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.setDnets = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string dadrs = 4;
 * @return {string}
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.getDadrs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.NetworkScanJob} returns this
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.setDadrs = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 scan_limit = 5;
 * @return {number}
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.getScanLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.NetworkScanJob} returns this
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.setScanLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Duration operation_timeout = 6;
 * @return {?proto.google.protobuf.Duration}
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.getOperationTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 6));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.normalgw.bacnet.NetworkScanJob} returns this
*/
proto.normalgw.bacnet.NetworkScanJob.prototype.setOperationTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.NetworkScanJob} returns this
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.clearOperationTimeout = function() {
  return this.setOperationTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.hasOperationTimeout = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool auto_scan = 7;
 * @return {boolean}
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.getAutoScan = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.normalgw.bacnet.NetworkScanJob} returns this
 */
proto.normalgw.bacnet.NetworkScanJob.prototype.setAutoScan = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.BACnetPoint.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.BACnetPoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.BACnetPoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.BACnetPoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceAddress: (f = msg.getDeviceAddress()) && normalgw_bacnet_bacnet_pb.DeviceAddress.toObject(includeInstance, f),
    property: (f = msg.getProperty()) && normalgw_bacnet_bacnet_pb.ObjectPropertyReference.toObject(includeInstance, f),
    exampleValue: (f = msg.getExampleValue()) && normalgw_bacnet_bacnet_pb.ApplicationDataValue.toObject(includeInstance, f),
    hasPriorityArray: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.BACnetPoint}
 */
proto.normalgw.bacnet.BACnetPoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.BACnetPoint;
  return proto.normalgw.bacnet.BACnetPoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.BACnetPoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.BACnetPoint}
 */
proto.normalgw.bacnet.BACnetPoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = new normalgw_bacnet_bacnet_pb.DeviceAddress;
      reader.readMessage(value,normalgw_bacnet_bacnet_pb.DeviceAddress.deserializeBinaryFromReader);
      msg.setDeviceAddress(value);
      break;
    case 3:
      var value = new normalgw_bacnet_bacnet_pb.ObjectPropertyReference;
      reader.readMessage(value,normalgw_bacnet_bacnet_pb.ObjectPropertyReference.deserializeBinaryFromReader);
      msg.setProperty(value);
      break;
    case 4:
      var value = new normalgw_bacnet_bacnet_pb.ApplicationDataValue;
      reader.readMessage(value,normalgw_bacnet_bacnet_pb.ApplicationDataValue.deserializeBinaryFromReader);
      msg.setExampleValue(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasPriorityArray(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.BACnetPoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.BACnetPoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.BACnetPoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.BACnetPoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      normalgw_bacnet_bacnet_pb.DeviceAddress.serializeBinaryToWriter
    );
  }
  f = message.getProperty();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      normalgw_bacnet_bacnet_pb.ObjectPropertyReference.serializeBinaryToWriter
    );
  }
  f = message.getExampleValue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      normalgw_bacnet_bacnet_pb.ApplicationDataValue.serializeBinaryToWriter
    );
  }
  f = message.getHasPriorityArray();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.normalgw.bacnet.BACnetPoint.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.BACnetPoint} returns this
 */
proto.normalgw.bacnet.BACnetPoint.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DeviceAddress device_address = 2;
 * @return {?proto.normalgw.bacnet.DeviceAddress}
 */
proto.normalgw.bacnet.BACnetPoint.prototype.getDeviceAddress = function() {
  return /** @type{?proto.normalgw.bacnet.DeviceAddress} */ (
    jspb.Message.getWrapperField(this, normalgw_bacnet_bacnet_pb.DeviceAddress, 2));
};


/**
 * @param {?proto.normalgw.bacnet.DeviceAddress|undefined} value
 * @return {!proto.normalgw.bacnet.BACnetPoint} returns this
*/
proto.normalgw.bacnet.BACnetPoint.prototype.setDeviceAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.BACnetPoint} returns this
 */
proto.normalgw.bacnet.BACnetPoint.prototype.clearDeviceAddress = function() {
  return this.setDeviceAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.BACnetPoint.prototype.hasDeviceAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ObjectPropertyReference property = 3;
 * @return {?proto.normalgw.bacnet.ObjectPropertyReference}
 */
proto.normalgw.bacnet.BACnetPoint.prototype.getProperty = function() {
  return /** @type{?proto.normalgw.bacnet.ObjectPropertyReference} */ (
    jspb.Message.getWrapperField(this, normalgw_bacnet_bacnet_pb.ObjectPropertyReference, 3));
};


/**
 * @param {?proto.normalgw.bacnet.ObjectPropertyReference|undefined} value
 * @return {!proto.normalgw.bacnet.BACnetPoint} returns this
*/
proto.normalgw.bacnet.BACnetPoint.prototype.setProperty = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.BACnetPoint} returns this
 */
proto.normalgw.bacnet.BACnetPoint.prototype.clearProperty = function() {
  return this.setProperty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.BACnetPoint.prototype.hasProperty = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ApplicationDataValue example_value = 4;
 * @return {?proto.normalgw.bacnet.ApplicationDataValue}
 */
proto.normalgw.bacnet.BACnetPoint.prototype.getExampleValue = function() {
  return /** @type{?proto.normalgw.bacnet.ApplicationDataValue} */ (
    jspb.Message.getWrapperField(this, normalgw_bacnet_bacnet_pb.ApplicationDataValue, 4));
};


/**
 * @param {?proto.normalgw.bacnet.ApplicationDataValue|undefined} value
 * @return {!proto.normalgw.bacnet.BACnetPoint} returns this
*/
proto.normalgw.bacnet.BACnetPoint.prototype.setExampleValue = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.BACnetPoint} returns this
 */
proto.normalgw.bacnet.BACnetPoint.prototype.clearExampleValue = function() {
  return this.setExampleValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.BACnetPoint.prototype.hasExampleValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool has_priority_array = 5;
 * @return {boolean}
 */
proto.normalgw.bacnet.BACnetPoint.prototype.getHasPriorityArray = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.normalgw.bacnet.BACnetPoint} returns this
 */
proto.normalgw.bacnet.BACnetPoint.prototype.setHasPriorityArray = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.GetJobRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.GetJobRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.GetJobRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.GetJobRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusFilter: jspb.Message.getFieldWithDefault(msg, 1, 0),
    idFilter: jspb.Message.getFieldWithDefault(msg, 2, 0),
    parentIdFilter: jspb.Message.getFieldWithDefault(msg, 3, 0),
    typeFilter: jspb.Message.getFieldWithDefault(msg, 4, ""),
    deviceFilter: jspb.Message.getFieldWithDefault(msg, 5, ""),
    full: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    sortField: jspb.Message.getFieldWithDefault(msg, 7, ""),
    sortOrder: jspb.Message.getFieldWithDefault(msg, 8, ""),
    pageOffset: jspb.Message.getFieldWithDefault(msg, 9, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.GetJobRequest}
 */
proto.normalgw.bacnet.GetJobRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.GetJobRequest;
  return proto.normalgw.bacnet.GetJobRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.GetJobRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.GetJobRequest}
 */
proto.normalgw.bacnet.GetJobRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.normalgw.bacnet.ScanJob.JobStatus} */ (reader.readEnum());
      msg.setStatusFilter(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIdFilter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParentIdFilter(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeFilter(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceFilter(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFull(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortField(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortOrder(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageOffset(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.GetJobRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.GetJobRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.GetJobRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.GetJobRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusFilter();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIdFilter();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getParentIdFilter();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getTypeFilter();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeviceFilter();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFull();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getSortField();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSortOrder();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPageOffset();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional ScanJob.JobStatus status_filter = 1;
 * @return {!proto.normalgw.bacnet.ScanJob.JobStatus}
 */
proto.normalgw.bacnet.GetJobRequest.prototype.getStatusFilter = function() {
  return /** @type {!proto.normalgw.bacnet.ScanJob.JobStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.normalgw.bacnet.ScanJob.JobStatus} value
 * @return {!proto.normalgw.bacnet.GetJobRequest} returns this
 */
proto.normalgw.bacnet.GetJobRequest.prototype.setStatusFilter = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 id_filter = 2;
 * @return {number}
 */
proto.normalgw.bacnet.GetJobRequest.prototype.getIdFilter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.GetJobRequest} returns this
 */
proto.normalgw.bacnet.GetJobRequest.prototype.setIdFilter = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 parent_id_filter = 3;
 * @return {number}
 */
proto.normalgw.bacnet.GetJobRequest.prototype.getParentIdFilter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.GetJobRequest} returns this
 */
proto.normalgw.bacnet.GetJobRequest.prototype.setParentIdFilter = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string type_filter = 4;
 * @return {string}
 */
proto.normalgw.bacnet.GetJobRequest.prototype.getTypeFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.GetJobRequest} returns this
 */
proto.normalgw.bacnet.GetJobRequest.prototype.setTypeFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string device_filter = 5;
 * @return {string}
 */
proto.normalgw.bacnet.GetJobRequest.prototype.getDeviceFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.GetJobRequest} returns this
 */
proto.normalgw.bacnet.GetJobRequest.prototype.setDeviceFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool full = 6;
 * @return {boolean}
 */
proto.normalgw.bacnet.GetJobRequest.prototype.getFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.normalgw.bacnet.GetJobRequest} returns this
 */
proto.normalgw.bacnet.GetJobRequest.prototype.setFull = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string sort_field = 7;
 * @return {string}
 */
proto.normalgw.bacnet.GetJobRequest.prototype.getSortField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.GetJobRequest} returns this
 */
proto.normalgw.bacnet.GetJobRequest.prototype.setSortField = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string sort_order = 8;
 * @return {string}
 */
proto.normalgw.bacnet.GetJobRequest.prototype.getSortOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.GetJobRequest} returns this
 */
proto.normalgw.bacnet.GetJobRequest.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 page_offset = 9;
 * @return {number}
 */
proto.normalgw.bacnet.GetJobRequest.prototype.getPageOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.GetJobRequest} returns this
 */
proto.normalgw.bacnet.GetJobRequest.prototype.setPageOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 page_size = 10;
 * @return {number}
 */
proto.normalgw.bacnet.GetJobRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.GetJobRequest} returns this
 */
proto.normalgw.bacnet.GetJobRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.normalgw.bacnet.GetJobReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.GetJobReply.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.GetJobReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.GetJobReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.GetJobReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.normalgw.bacnet.ScanJob.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.GetJobReply}
 */
proto.normalgw.bacnet.GetJobReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.GetJobReply;
  return proto.normalgw.bacnet.GetJobReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.GetJobReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.GetJobReply}
 */
proto.normalgw.bacnet.GetJobReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.normalgw.bacnet.ScanJob;
      reader.readMessage(value,proto.normalgw.bacnet.ScanJob.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.GetJobReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.GetJobReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.GetJobReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.GetJobReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.normalgw.bacnet.ScanJob.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated ScanJob results = 1;
 * @return {!Array<!proto.normalgw.bacnet.ScanJob>}
 */
proto.normalgw.bacnet.GetJobReply.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.ScanJob>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.normalgw.bacnet.ScanJob, 1));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.ScanJob>} value
 * @return {!proto.normalgw.bacnet.GetJobReply} returns this
*/
proto.normalgw.bacnet.GetJobReply.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.normalgw.bacnet.ScanJob=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.ScanJob}
 */
proto.normalgw.bacnet.GetJobReply.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.normalgw.bacnet.ScanJob, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.GetJobReply} returns this
 */
proto.normalgw.bacnet.GetJobReply.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int64 total_count = 2;
 * @return {number}
 */
proto.normalgw.bacnet.GetJobReply.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.GetJobReply} returns this
 */
proto.normalgw.bacnet.GetJobReply.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.normalgw.bacnet.StartJobRequest.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.normalgw.bacnet.StartJobRequest.JobspecCase = {
  JOBSPEC_NOT_SET: 0,
  DEVICE: 3,
  OBJECT: 4,
  NETWORK: 5
};

/**
 * @return {proto.normalgw.bacnet.StartJobRequest.JobspecCase}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.getJobspecCase = function() {
  return /** @type {proto.normalgw.bacnet.StartJobRequest.JobspecCase} */(jspb.Message.computeOneofCase(this, proto.normalgw.bacnet.StartJobRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.StartJobRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.StartJobRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.StartJobRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    device: (f = msg.getDevice()) && proto.normalgw.bacnet.DeviceScanJob.toObject(includeInstance, f),
    object: (f = msg.getObject()) && proto.normalgw.bacnet.ObjectScanJob.toObject(includeInstance, f),
    network: (f = msg.getNetwork()) && proto.normalgw.bacnet.NetworkScanJob.toObject(includeInstance, f),
    autoImport: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    autoPoll: (f = msg.getAutoPoll()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.StartJobRequest}
 */
proto.normalgw.bacnet.StartJobRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.StartJobRequest;
  return proto.normalgw.bacnet.StartJobRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.StartJobRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.StartJobRequest}
 */
proto.normalgw.bacnet.StartJobRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 3:
      var value = new proto.normalgw.bacnet.DeviceScanJob;
      reader.readMessage(value,proto.normalgw.bacnet.DeviceScanJob.deserializeBinaryFromReader);
      msg.setDevice(value);
      break;
    case 4:
      var value = new proto.normalgw.bacnet.ObjectScanJob;
      reader.readMessage(value,proto.normalgw.bacnet.ObjectScanJob.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    case 5:
      var value = new proto.normalgw.bacnet.NetworkScanJob;
      reader.readMessage(value,proto.normalgw.bacnet.NetworkScanJob.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoImport(value);
      break;
    case 7:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setAutoPoll(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.StartJobRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.StartJobRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.StartJobRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDevice();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.normalgw.bacnet.DeviceScanJob.serializeBinaryToWriter
    );
  }
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.normalgw.bacnet.ObjectScanJob.serializeBinaryToWriter
    );
  }
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.normalgw.bacnet.NetworkScanJob.serializeBinaryToWriter
    );
  }
  f = message.getAutoImport();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAutoPoll();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.StartJobRequest} returns this
 */
proto.normalgw.bacnet.StartJobRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DeviceScanJob device = 3;
 * @return {?proto.normalgw.bacnet.DeviceScanJob}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.getDevice = function() {
  return /** @type{?proto.normalgw.bacnet.DeviceScanJob} */ (
    jspb.Message.getWrapperField(this, proto.normalgw.bacnet.DeviceScanJob, 3));
};


/**
 * @param {?proto.normalgw.bacnet.DeviceScanJob|undefined} value
 * @return {!proto.normalgw.bacnet.StartJobRequest} returns this
*/
proto.normalgw.bacnet.StartJobRequest.prototype.setDevice = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.normalgw.bacnet.StartJobRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.StartJobRequest} returns this
 */
proto.normalgw.bacnet.StartJobRequest.prototype.clearDevice = function() {
  return this.setDevice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.hasDevice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ObjectScanJob object = 4;
 * @return {?proto.normalgw.bacnet.ObjectScanJob}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.getObject = function() {
  return /** @type{?proto.normalgw.bacnet.ObjectScanJob} */ (
    jspb.Message.getWrapperField(this, proto.normalgw.bacnet.ObjectScanJob, 4));
};


/**
 * @param {?proto.normalgw.bacnet.ObjectScanJob|undefined} value
 * @return {!proto.normalgw.bacnet.StartJobRequest} returns this
*/
proto.normalgw.bacnet.StartJobRequest.prototype.setObject = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.normalgw.bacnet.StartJobRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.StartJobRequest} returns this
 */
proto.normalgw.bacnet.StartJobRequest.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.hasObject = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional NetworkScanJob network = 5;
 * @return {?proto.normalgw.bacnet.NetworkScanJob}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.getNetwork = function() {
  return /** @type{?proto.normalgw.bacnet.NetworkScanJob} */ (
    jspb.Message.getWrapperField(this, proto.normalgw.bacnet.NetworkScanJob, 5));
};


/**
 * @param {?proto.normalgw.bacnet.NetworkScanJob|undefined} value
 * @return {!proto.normalgw.bacnet.StartJobRequest} returns this
*/
proto.normalgw.bacnet.StartJobRequest.prototype.setNetwork = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.normalgw.bacnet.StartJobRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.StartJobRequest} returns this
 */
proto.normalgw.bacnet.StartJobRequest.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool auto_import = 6;
 * @return {boolean}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.getAutoImport = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.normalgw.bacnet.StartJobRequest} returns this
 */
proto.normalgw.bacnet.StartJobRequest.prototype.setAutoImport = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Duration auto_poll = 7;
 * @return {?proto.google.protobuf.Duration}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.getAutoPoll = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 7));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.normalgw.bacnet.StartJobRequest} returns this
*/
proto.normalgw.bacnet.StartJobRequest.prototype.setAutoPoll = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.StartJobRequest} returns this
 */
proto.normalgw.bacnet.StartJobRequest.prototype.clearAutoPoll = function() {
  return this.setAutoPoll(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.StartJobRequest.prototype.hasAutoPoll = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.normalgw.bacnet.RestartJobsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.RestartJobsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.RestartJobsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.RestartJobsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.RestartJobsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.RestartJobsRequest}
 */
proto.normalgw.bacnet.RestartJobsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.RestartJobsRequest;
  return proto.normalgw.bacnet.RestartJobsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.RestartJobsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.RestartJobsRequest}
 */
proto.normalgw.bacnet.RestartJobsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setIdsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.RestartJobsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.RestartJobsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.RestartJobsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.RestartJobsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
};


/**
 * repeated uint32 ids = 1;
 * @return {!Array<number>}
 */
proto.normalgw.bacnet.RestartJobsRequest.prototype.getIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.normalgw.bacnet.RestartJobsRequest} returns this
 */
proto.normalgw.bacnet.RestartJobsRequest.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.RestartJobsRequest} returns this
 */
proto.normalgw.bacnet.RestartJobsRequest.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.RestartJobsRequest} returns this
 */
proto.normalgw.bacnet.RestartJobsRequest.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.normalgw.bacnet.RestartJobsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.RestartJobsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.RestartJobsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.RestartJobsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.RestartJobsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    idsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.RestartJobsReply}
 */
proto.normalgw.bacnet.RestartJobsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.RestartJobsReply;
  return proto.normalgw.bacnet.RestartJobsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.RestartJobsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.RestartJobsReply}
 */
proto.normalgw.bacnet.RestartJobsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setIdsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.RestartJobsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.RestartJobsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.RestartJobsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.RestartJobsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
};


/**
 * repeated uint32 ids = 1;
 * @return {!Array<number>}
 */
proto.normalgw.bacnet.RestartJobsReply.prototype.getIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.normalgw.bacnet.RestartJobsReply} returns this
 */
proto.normalgw.bacnet.RestartJobsReply.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.RestartJobsReply} returns this
 */
proto.normalgw.bacnet.RestartJobsReply.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.RestartJobsReply} returns this
 */
proto.normalgw.bacnet.RestartJobsReply.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.ImportJobRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.ImportJobRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.ImportJobRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ImportJobRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    jobId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.ImportJobRequest}
 */
proto.normalgw.bacnet.ImportJobRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.ImportJobRequest;
  return proto.normalgw.bacnet.ImportJobRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.ImportJobRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.ImportJobRequest}
 */
proto.normalgw.bacnet.ImportJobRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setJobId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.ImportJobRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.ImportJobRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.ImportJobRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ImportJobRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJobId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 job_id = 1;
 * @return {number}
 */
proto.normalgw.bacnet.ImportJobRequest.prototype.getJobId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.ImportJobRequest} returns this
 */
proto.normalgw.bacnet.ImportJobRequest.prototype.setJobId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.ImportJobReply.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.ImportJobReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.ImportJobReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ImportJobReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.ImportJobReply}
 */
proto.normalgw.bacnet.ImportJobReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.ImportJobReply;
  return proto.normalgw.bacnet.ImportJobReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.ImportJobReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.ImportJobReply}
 */
proto.normalgw.bacnet.ImportJobReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.ImportJobReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.ImportJobReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.ImportJobReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ImportJobReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.ObserveJobUpdatesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.ObserveJobUpdatesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.ObserveJobUpdatesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ObserveJobUpdatesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.ObserveJobUpdatesRequest}
 */
proto.normalgw.bacnet.ObserveJobUpdatesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.ObserveJobUpdatesRequest;
  return proto.normalgw.bacnet.ObserveJobUpdatesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.ObserveJobUpdatesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.ObserveJobUpdatesRequest}
 */
proto.normalgw.bacnet.ObserveJobUpdatesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.ObserveJobUpdatesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.ObserveJobUpdatesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.ObserveJobUpdatesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ObserveJobUpdatesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.normalgw.bacnet.ObserveJobUpdatesRequest.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.ObserveJobUpdatesRequest} returns this
 */
proto.normalgw.bacnet.ObserveJobUpdatesRequest.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.ObserveJobUpdatesReply.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.ObserveJobUpdatesReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.ObserveJobUpdatesReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ObserveJobUpdatesReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    job: (f = msg.getJob()) && proto.normalgw.bacnet.ScanJob.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.ObserveJobUpdatesReply}
 */
proto.normalgw.bacnet.ObserveJobUpdatesReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.ObserveJobUpdatesReply;
  return proto.normalgw.bacnet.ObserveJobUpdatesReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.ObserveJobUpdatesReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.ObserveJobUpdatesReply}
 */
proto.normalgw.bacnet.ObserveJobUpdatesReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 2:
      var value = new proto.normalgw.bacnet.ScanJob;
      reader.readMessage(value,proto.normalgw.bacnet.ScanJob.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.ObserveJobUpdatesReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.ObserveJobUpdatesReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.ObserveJobUpdatesReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ObserveJobUpdatesReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.normalgw.bacnet.ScanJob.serializeBinaryToWriter
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.normalgw.bacnet.ObserveJobUpdatesReply.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.ObserveJobUpdatesReply} returns this
 */
proto.normalgw.bacnet.ObserveJobUpdatesReply.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ScanJob job = 2;
 * @return {?proto.normalgw.bacnet.ScanJob}
 */
proto.normalgw.bacnet.ObserveJobUpdatesReply.prototype.getJob = function() {
  return /** @type{?proto.normalgw.bacnet.ScanJob} */ (
    jspb.Message.getWrapperField(this, proto.normalgw.bacnet.ScanJob, 2));
};


/**
 * @param {?proto.normalgw.bacnet.ScanJob|undefined} value
 * @return {!proto.normalgw.bacnet.ObserveJobUpdatesReply} returns this
*/
proto.normalgw.bacnet.ObserveJobUpdatesReply.prototype.setJob = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ObserveJobUpdatesReply} returns this
 */
proto.normalgw.bacnet.ObserveJobUpdatesReply.prototype.clearJob = function() {
  return this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ObserveJobUpdatesReply.prototype.hasJob = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.normalgw.bacnet);
