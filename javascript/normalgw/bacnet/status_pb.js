// source: normalgw/bacnet/status.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var normalgw_bacnet_bacnet_pb = require('../../normalgw/bacnet/bacnet_pb.js');
goog.object.extend(proto, normalgw_bacnet_bacnet_pb);
goog.exportSymbol('proto.normalgw.bacnet.DeviceStatus', null, global);
goog.exportSymbol('proto.normalgw.bacnet.GetDeviceStatusReply', null, global);
goog.exportSymbol('proto.normalgw.bacnet.GetDeviceStatusRequest', null, global);
goog.exportSymbol('proto.normalgw.bacnet.GetDeviceStatusRequest.UpStatus', null, global);
goog.exportSymbol('proto.normalgw.bacnet.ScanEvents', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.DeviceStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.normalgw.bacnet.DeviceStatus.repeatedFields_, null);
};
goog.inherits(proto.normalgw.bacnet.DeviceStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.DeviceStatus.displayName = 'proto.normalgw.bacnet.DeviceStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.ScanEvents = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.ScanEvents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.ScanEvents.displayName = 'proto.normalgw.bacnet.ScanEvents';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.GetDeviceStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.normalgw.bacnet.GetDeviceStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.GetDeviceStatusRequest.displayName = 'proto.normalgw.bacnet.GetDeviceStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.normalgw.bacnet.GetDeviceStatusReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.normalgw.bacnet.GetDeviceStatusReply.repeatedFields_, null);
};
goog.inherits(proto.normalgw.bacnet.GetDeviceStatusReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.normalgw.bacnet.GetDeviceStatusReply.displayName = 'proto.normalgw.bacnet.GetDeviceStatusReply';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.normalgw.bacnet.DeviceStatus.repeatedFields_ = [7,10,11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.DeviceStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.DeviceStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.DeviceStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    ts: (f = msg.getTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deviceId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    deviceName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    deviceUuid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    up: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    lastAlive: (f = msg.getLastAlive()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    upTimeseriesList: (f = jspb.Message.getRepeatedBooleanField(msg, 7)) == null ? undefined : f,
    livePoints1day: jspb.Message.getFieldWithDefault(msg, 8, 0),
    currentErrorRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    errorPropertiesList: jspb.Message.toObjectList(msg.getErrorPropertiesList(),
    normalgw_bacnet_bacnet_pb.ObjectPropertyReference.toObject, includeInstance),
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    normalgw_bacnet_bacnet_pb.Error.toObject, includeInstance),
    errorCountsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.DeviceStatus}
 */
proto.normalgw.bacnet.DeviceStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.DeviceStatus;
  return proto.normalgw.bacnet.DeviceStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.DeviceStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.DeviceStatus}
 */
proto.normalgw.bacnet.DeviceStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceUuid(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUp(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastAlive(value);
      break;
    case 7:
      var value = /** @type {!Array<boolean>} */ (reader.readPackedBool());
      msg.setUpTimeseriesList(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLivePoints1day(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCurrentErrorRate(value);
      break;
    case 10:
      var value = new normalgw_bacnet_bacnet_pb.ObjectPropertyReference;
      reader.readMessage(value,normalgw_bacnet_bacnet_pb.ObjectPropertyReference.deserializeBinaryFromReader);
      msg.addErrorProperties(value);
      break;
    case 11:
      var value = new normalgw_bacnet_bacnet_pb.Error;
      reader.readMessage(value,normalgw_bacnet_bacnet_pb.Error.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 12:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setErrorCountsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.DeviceStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.DeviceStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.DeviceStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTs();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeviceId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDeviceUuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUp();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getLastAlive();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpTimeseriesList();
  if (f.length > 0) {
    writer.writePackedBool(
      7,
      f
    );
  }
  f = message.getLivePoints1day();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getCurrentErrorRate();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getErrorPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      normalgw_bacnet_bacnet_pb.ObjectPropertyReference.serializeBinaryToWriter
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      normalgw_bacnet_bacnet_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getErrorCountsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      12,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp ts = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.getTs = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
*/
proto.normalgw.bacnet.DeviceStatus.prototype.setTs = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.clearTs = function() {
  return this.setTs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.hasTs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 device_id = 2;
 * @return {number}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.getDeviceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.setDeviceId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string device_name = 3;
 * @return {string}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.setDeviceName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string device_uuid = 4;
 * @return {string}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.getDeviceUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.setDeviceUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool up = 5;
 * @return {boolean}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.getUp = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.setUp = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp last_alive = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.getLastAlive = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
*/
proto.normalgw.bacnet.DeviceStatus.prototype.setLastAlive = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.clearLastAlive = function() {
  return this.setLastAlive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.hasLastAlive = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated bool up_timeseries = 7;
 * @return {!Array<boolean>}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.getUpTimeseriesList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 7));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.setUpTimeseriesList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.addUpTimeseries = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.clearUpTimeseriesList = function() {
  return this.setUpTimeseriesList([]);
};


/**
 * optional uint32 live_points_1day = 8;
 * @return {number}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.getLivePoints1day = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.setLivePoints1day = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional float current_error_rate = 9;
 * @return {number}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.getCurrentErrorRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.setCurrentErrorRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * repeated ObjectPropertyReference error_properties = 10;
 * @return {!Array<!proto.normalgw.bacnet.ObjectPropertyReference>}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.getErrorPropertiesList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.ObjectPropertyReference>} */ (
    jspb.Message.getRepeatedWrapperField(this, normalgw_bacnet_bacnet_pb.ObjectPropertyReference, 10));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.ObjectPropertyReference>} value
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
*/
proto.normalgw.bacnet.DeviceStatus.prototype.setErrorPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.normalgw.bacnet.ObjectPropertyReference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.ObjectPropertyReference}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.addErrorProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.normalgw.bacnet.ObjectPropertyReference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.clearErrorPropertiesList = function() {
  return this.setErrorPropertiesList([]);
};


/**
 * repeated Error errors = 11;
 * @return {!Array<!proto.normalgw.bacnet.Error>}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.Error>} */ (
    jspb.Message.getRepeatedWrapperField(this, normalgw_bacnet_bacnet_pb.Error, 11));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.Error>} value
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
*/
proto.normalgw.bacnet.DeviceStatus.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.normalgw.bacnet.Error=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.Error}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.normalgw.bacnet.Error, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * repeated uint32 error_counts = 12;
 * @return {!Array<number>}
 */
proto.normalgw.bacnet.DeviceStatus.prototype.getErrorCountsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.setErrorCountsList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.addErrorCounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.DeviceStatus} returns this
 */
proto.normalgw.bacnet.DeviceStatus.prototype.clearErrorCountsList = function() {
  return this.setErrorCountsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.ScanEvents.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.ScanEvents.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.ScanEvents} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ScanEvents.toObject = function(includeInstance, msg) {
  var f, obj = {
    ts: (f = msg.getTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.ScanEvents}
 */
proto.normalgw.bacnet.ScanEvents.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.ScanEvents;
  return proto.normalgw.bacnet.ScanEvents.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.ScanEvents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.ScanEvents}
 */
proto.normalgw.bacnet.ScanEvents.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.ScanEvents.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.ScanEvents.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.ScanEvents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.ScanEvents.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTs();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp ts = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.normalgw.bacnet.ScanEvents.prototype.getTs = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.normalgw.bacnet.ScanEvents} returns this
*/
proto.normalgw.bacnet.ScanEvents.prototype.setTs = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.normalgw.bacnet.ScanEvents} returns this
 */
proto.normalgw.bacnet.ScanEvents.prototype.clearTs = function() {
  return this.setTs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.normalgw.bacnet.ScanEvents.prototype.hasTs = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.GetDeviceStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.GetDeviceStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    layerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    up: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sortField: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sortOrder: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pageOffset: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.GetDeviceStatusRequest}
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.GetDeviceStatusRequest;
  return proto.normalgw.bacnet.GetDeviceStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.GetDeviceStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.GetDeviceStatusRequest}
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLayerName(value);
      break;
    case 2:
      var value = /** @type {!proto.normalgw.bacnet.GetDeviceStatusRequest.UpStatus} */ (reader.readEnum());
      msg.setUp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortField(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortOrder(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageOffset(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.GetDeviceStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.GetDeviceStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayerName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUp();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSortField();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSortOrder();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPageOffset();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.UpStatus = {
  ANY: 0,
  UP: 1,
  DOWN: 2
};

/**
 * optional string layer_name = 1;
 * @return {string}
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.getLayerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.GetDeviceStatusRequest} returns this
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.setLayerName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional UpStatus up = 2;
 * @return {!proto.normalgw.bacnet.GetDeviceStatusRequest.UpStatus}
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.getUp = function() {
  return /** @type {!proto.normalgw.bacnet.GetDeviceStatusRequest.UpStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.normalgw.bacnet.GetDeviceStatusRequest.UpStatus} value
 * @return {!proto.normalgw.bacnet.GetDeviceStatusRequest} returns this
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.setUp = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string sort_field = 3;
 * @return {string}
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.getSortField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.GetDeviceStatusRequest} returns this
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.setSortField = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string sort_order = 4;
 * @return {string}
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.getSortOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.normalgw.bacnet.GetDeviceStatusRequest} returns this
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 page_offset = 5;
 * @return {number}
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.getPageOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.GetDeviceStatusRequest} returns this
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.setPageOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 page_size = 6;
 * @return {number}
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.GetDeviceStatusRequest} returns this
 */
proto.normalgw.bacnet.GetDeviceStatusRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.normalgw.bacnet.GetDeviceStatusReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.normalgw.bacnet.GetDeviceStatusReply.prototype.toObject = function(opt_includeInstance) {
  return proto.normalgw.bacnet.GetDeviceStatusReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.normalgw.bacnet.GetDeviceStatusReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.GetDeviceStatusReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.normalgw.bacnet.DeviceStatus.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.normalgw.bacnet.GetDeviceStatusReply}
 */
proto.normalgw.bacnet.GetDeviceStatusReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.normalgw.bacnet.GetDeviceStatusReply;
  return proto.normalgw.bacnet.GetDeviceStatusReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.normalgw.bacnet.GetDeviceStatusReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.normalgw.bacnet.GetDeviceStatusReply}
 */
proto.normalgw.bacnet.GetDeviceStatusReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.normalgw.bacnet.DeviceStatus;
      reader.readMessage(value,proto.normalgw.bacnet.DeviceStatus.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.normalgw.bacnet.GetDeviceStatusReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.normalgw.bacnet.GetDeviceStatusReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.normalgw.bacnet.GetDeviceStatusReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.normalgw.bacnet.GetDeviceStatusReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.normalgw.bacnet.DeviceStatus.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated DeviceStatus results = 1;
 * @return {!Array<!proto.normalgw.bacnet.DeviceStatus>}
 */
proto.normalgw.bacnet.GetDeviceStatusReply.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.normalgw.bacnet.DeviceStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.normalgw.bacnet.DeviceStatus, 1));
};


/**
 * @param {!Array<!proto.normalgw.bacnet.DeviceStatus>} value
 * @return {!proto.normalgw.bacnet.GetDeviceStatusReply} returns this
*/
proto.normalgw.bacnet.GetDeviceStatusReply.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.normalgw.bacnet.DeviceStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.normalgw.bacnet.DeviceStatus}
 */
proto.normalgw.bacnet.GetDeviceStatusReply.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.normalgw.bacnet.DeviceStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.normalgw.bacnet.GetDeviceStatusReply} returns this
 */
proto.normalgw.bacnet.GetDeviceStatusReply.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int64 total_count = 2;
 * @return {number}
 */
proto.normalgw.bacnet.GetDeviceStatusReply.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.normalgw.bacnet.GetDeviceStatusReply} returns this
 */
proto.normalgw.bacnet.GetDeviceStatusReply.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.normalgw.bacnet);
