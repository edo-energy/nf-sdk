# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from normalgw.bacnet import bacnet_pb2 as normalgw_dot_bacnet_dot_bacnet__pb2


class BacnetStub(object):
    """
    BACnet Service

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.WhoIs = channel.unary_stream(
                '/normalgw.bacnet.Bacnet/WhoIs',
                request_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.WhoIsRequest.SerializeToString,
                response_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.WhoIsReply.FromString,
                )
        self.WhoIsRouter = channel.unary_stream(
                '/normalgw.bacnet.Bacnet/WhoIsRouter',
                request_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.WhoIsRouterRequest.SerializeToString,
                response_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.WhoIsRouterReply.FromString,
                )
        self.ReadProperty = channel.unary_unary(
                '/normalgw.bacnet.Bacnet/ReadProperty',
                request_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.ReadPropertyRequest.SerializeToString,
                response_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.ReadPropertyReply.FromString,
                )
        self.ReadPropMultiple = channel.unary_unary(
                '/normalgw.bacnet.Bacnet/ReadPropMultiple',
                request_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.ReadPropMultipleRequest.SerializeToString,
                response_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.ReadPropMultipleReply.FromString,
                )
        self.RegisterWithBbmd = channel.unary_unary(
                '/normalgw.bacnet.Bacnet/RegisterWithBbmd',
                request_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.RegisterWithBbmdRequest.SerializeToString,
                response_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.RegisterWithBbmdReply.FromString,
                )
        self.WriteProperty = channel.unary_unary(
                '/normalgw.bacnet.Bacnet/WriteProperty',
                request_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.WritePropertyRequest.SerializeToString,
                response_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.WritePropertyReply.FromString,
                )


class BacnetServicer(object):
    """
    BACnet Service

    """

    def WhoIs(self, request, context):
        """
        WhoIs

        Send a Who-Is request on the configured network, and stream the
        discovered devices until the timeout expires.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WhoIsRouter(self, request, context):
        """
        WhoIsRouter

        Send a WhoIsRouter request, and stream back replies until the
        timeout expires.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadProperty(self, request, context):
        """
        ReadProperty

        Execute a ReadProperty request against a BACnet device.  This may
        be merged with other pending reads into a `ReadPropMultiple`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadPropMultiple(self, request, context):
        """
        ReadPropMultiple

        Read a list of properties from a single device.

        This function does not map 1-1 onto BACnet operations; reads may
        be merged with other pending reads, split up due to APDU limits
        on the device or return cached data.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterWithBbmd(self, request, context):
        """rpc ReadFile (ReadFileRequest) returns (ReadFileReply) {}

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteProperty(self, request, context):
        """
        WriteProperty

        Write a single property.  You may get an error if the right type
        is not used.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BacnetServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'WhoIs': grpc.unary_stream_rpc_method_handler(
                    servicer.WhoIs,
                    request_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.WhoIsRequest.FromString,
                    response_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.WhoIsReply.SerializeToString,
            ),
            'WhoIsRouter': grpc.unary_stream_rpc_method_handler(
                    servicer.WhoIsRouter,
                    request_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.WhoIsRouterRequest.FromString,
                    response_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.WhoIsRouterReply.SerializeToString,
            ),
            'ReadProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadProperty,
                    request_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.ReadPropertyRequest.FromString,
                    response_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.ReadPropertyReply.SerializeToString,
            ),
            'ReadPropMultiple': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadPropMultiple,
                    request_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.ReadPropMultipleRequest.FromString,
                    response_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.ReadPropMultipleReply.SerializeToString,
            ),
            'RegisterWithBbmd': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterWithBbmd,
                    request_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.RegisterWithBbmdRequest.FromString,
                    response_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.RegisterWithBbmdReply.SerializeToString,
            ),
            'WriteProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteProperty,
                    request_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.WritePropertyRequest.FromString,
                    response_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.WritePropertyReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'normalgw.bacnet.Bacnet', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Bacnet(object):
    """
    BACnet Service

    """

    @staticmethod
    def WhoIs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/normalgw.bacnet.Bacnet/WhoIs',
            normalgw_dot_bacnet_dot_bacnet__pb2.WhoIsRequest.SerializeToString,
            normalgw_dot_bacnet_dot_bacnet__pb2.WhoIsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WhoIsRouter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/normalgw.bacnet.Bacnet/WhoIsRouter',
            normalgw_dot_bacnet_dot_bacnet__pb2.WhoIsRouterRequest.SerializeToString,
            normalgw_dot_bacnet_dot_bacnet__pb2.WhoIsRouterReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/normalgw.bacnet.Bacnet/ReadProperty',
            normalgw_dot_bacnet_dot_bacnet__pb2.ReadPropertyRequest.SerializeToString,
            normalgw_dot_bacnet_dot_bacnet__pb2.ReadPropertyReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadPropMultiple(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/normalgw.bacnet.Bacnet/ReadPropMultiple',
            normalgw_dot_bacnet_dot_bacnet__pb2.ReadPropMultipleRequest.SerializeToString,
            normalgw_dot_bacnet_dot_bacnet__pb2.ReadPropMultipleReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterWithBbmd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/normalgw.bacnet.Bacnet/RegisterWithBbmd',
            normalgw_dot_bacnet_dot_bacnet__pb2.RegisterWithBbmdRequest.SerializeToString,
            normalgw_dot_bacnet_dot_bacnet__pb2.RegisterWithBbmdReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/normalgw.bacnet.Bacnet/WriteProperty',
            normalgw_dot_bacnet_dot_bacnet__pb2.WritePropertyRequest.SerializeToString,
            normalgw_dot_bacnet_dot_bacnet__pb2.WritePropertyReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ConfigurationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConfiguration = channel.unary_unary(
                '/normalgw.bacnet.Configuration/GetConfiguration',
                request_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.GetConfigurationRequest.SerializeToString,
                response_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.GetConfigurationReply.FromString,
                )
        self.SetConfiguration = channel.unary_unary(
                '/normalgw.bacnet.Configuration/SetConfiguration',
                request_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.SetConfigurationRequest.SerializeToString,
                response_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.SetConfigurationReply.FromString,
                )


class ConfigurationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetConfiguration(self, request, context):
        """
        GetConfiguration

        Return the current configuration of the BACnet integration.  This
        includes things like the list of available network interfaces.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetConfiguration(self, request, context):
        """
        SetConfiguration

        This can be used to change the default network interface, port,
        or configure a BBMD.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConfigurationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfiguration,
                    request_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.GetConfigurationRequest.FromString,
                    response_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.GetConfigurationReply.SerializeToString,
            ),
            'SetConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.SetConfiguration,
                    request_deserializer=normalgw_dot_bacnet_dot_bacnet__pb2.SetConfigurationRequest.FromString,
                    response_serializer=normalgw_dot_bacnet_dot_bacnet__pb2.SetConfigurationReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'normalgw.bacnet.Configuration', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Configuration(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/normalgw.bacnet.Configuration/GetConfiguration',
            normalgw_dot_bacnet_dot_bacnet__pb2.GetConfigurationRequest.SerializeToString,
            normalgw_dot_bacnet_dot_bacnet__pb2.GetConfigurationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/normalgw.bacnet.Configuration/SetConfiguration',
            normalgw_dot_bacnet_dot_bacnet__pb2.SetConfigurationRequest.SerializeToString,
            normalgw_dot_bacnet_dot_bacnet__pb2.SetConfigurationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
